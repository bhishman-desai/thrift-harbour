before_script:
  - cd backend/thrift-harbour

stages:
  - build
  - test
  #  - quality
  - publish
  - deploy

build-be:
  stage: build
  image: maven:latest
  script:
    - mvn clean package
  artifacts:
    paths:
      - backend/thrift-harbour/target/*.jar

test-be:
  stage: test
  image: maven:latest
  script:
    - mvn test

# quality-be:
#   stage: quality
#   image: openjdk:11
#   script:
#     - echo "Compiling the project"
#     - mkdir smells/
#     - java -jar $CI_PROJECT_DIR/.gitlab/DesigniteJava.jar -i $CI_PROJECT_DIR -o $CI_PROJECT_DIR/smells/ -d
#   artifacts:
#     paths:
#       - smells/
#       - $CI_PROJECT_DIR

publish-be:
  image: docker:latest
  stage: publish
  tags:
    - deployment-group-15
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - pwd
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - docker build -t docker.io/group15/backend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/group15/backend:$CI_COMMIT_SHORT_SHA
  only:
    - development

deploy-be:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment-group-15
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u=$DOCKER_HUB_USER -p=$DOCKER_HUB_PWD docker.io"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/group15/backend:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f thrift-harbour-backend-app || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=$CURRENT_PROFILE --name thrift-harbour-backend-app docker.io/group15/backend:$CI_COMMIT_SHORT_SHA"
  environment:
    name: production
    url: http://172.17.1.50:8080
  only:
    - development
